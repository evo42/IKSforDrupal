(function(b){module("Errors");test("an unrecognised datatype",function(){try{var a=b.typedValue(" true ","http://www.w3.org/2001/XMLSchemaboolean");ok(true,"it should not throw an error");equals(a.representation," true ");equals(a.datatype,"http://www.w3.org/2001/XMLSchemaboolean");equals(a.value,"true")}catch(c){ok(false,"it should not throw an error")}});module("XML Schema datatypes");test("a boolean value",function(){var a=b.typedValue("true","http://www.w3.org/2001/XMLSchema#boolean");equals(a.value,
true);equals(a.representation,"true");equals(a.datatype,"http://www.w3.org/2001/XMLSchema#boolean")});test("a double value",function(){var a=b.typedValue("1.0e0","http://www.w3.org/2001/XMLSchema#double");equals(a.value,1);equals(a.representation,"1.0e0");equals(a.datatype,"http://www.w3.org/2001/XMLSchema#double")});test("an invalid duration",function(){try{b.typedValue("P","http://www.w3.org/2001/XMLSchema#duration");ok(false,"should raise an error")}catch(a){if(a.name==="InvalidValue")ok(true,
"should raise an error");else throw a;}});test("a standard dateTime",function(){var a=b.typedValue("2008-10-05T21:02:00Z","http://www.w3.org/2001/XMLSchema#dateTime");equals(a.value,"2008-10-05T21:02:00Z");equals(a.representation,"2008-10-05T21:02:00Z");equals(a.datatype,"http://www.w3.org/2001/XMLSchema#dateTime")});test("a dateTime with a timezone",function(){var a=b.typedValue("2008-10-05T21:02:00-05:00","http://www.w3.org/2001/XMLSchema#dateTime");equals(a.value,"2008-10-05T21:02:00-05:00");equals(a.representation,
"2008-10-05T21:02:00-05:00");equals(a.datatype,"http://www.w3.org/2001/XMLSchema#dateTime")});test("a dateTime with an invalid timezone",function(){try{b.typedValue("2008-10-05T21:02:00-15:00","http://www.w3.org/2001/XMLSchema#dateTime");ok(false,"should throw an error")}catch(a){equals(a.name,"InvalidValue")}});test("a dateTime with a bad number of days in a month",function(){try{b.typedValue("2009-02-29T21:02:00","http://www.w3.org/2001/XMLSchema#dateTime");ok(false,"should be an error")}catch(a){if(a.name===
"InvalidValue")ok(true,"should raise an error");else throw a;}});test("a valid dateTime on a leap year",function(){try{b.typedValue("2008-02-29T21:02:00","http://www.w3.org/2001/XMLSchema#dateTime");ok(true,"should not be an error")}catch(a){if(a.name==="InvalidValue")ok(false,"should not raise an error");else throw a;}});test("an invalid dateTime on a year divisible by 100",function(){try{b.typedValue("1990-02-29T21:02:00","http://www.w3.org/2001/XMLSchema#dateTime");ok(false,"should be an error")}catch(a){if(a.name===
"InvalidValue")ok(true,"should raise an error");else throw a;}});test("a valid dateTime on a leap year divisible by 400",function(){try{b.typedValue("2008-02-29T21:02:00","http://www.w3.org/2001/XMLSchema#dateTime");ok(true,"should not be an error")}catch(a){if(a.name==="InvalidValue")ok(false,"should not raise an error");else throw a;}});test("a valid date with whitespace around it",function(){try{var a=b.typedValue(" 2009-07-13 ","http://www.w3.org/2001/XMLSchema#date");ok(true,"should not be an error");
equals(a.value,"2009-07-13")}catch(c){if(c.name==="InvalidValue")ok(false,"should not raise an error");else throw c;}})})(jQuery);
