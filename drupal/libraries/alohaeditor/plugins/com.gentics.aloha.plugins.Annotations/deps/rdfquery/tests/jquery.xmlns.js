(function(b){var c={html:"http://www.w3.org/1999/xhtml",dc:"http://purl.org/dc/elements/1.1/",foaf:"http://xmlns.com/foaf/0.1/",cc:"http://creativecommons.org/ns#",ex:"http://example.org/",sioc:"http://rdfs.org/sioc/ns#",xhv:"http://www.w3.org/1999/xhtml/vocab#",prism:"http://prism.talis.com/schema#",xsd:"http://www.w3.org/2001/XMLSchema#",rdf:"http://www.w3.org/1999/02/22-rdf-syntax-ns#",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};module("When getting all namespaces");
test("on an element with three namespaces declared on it, including an empty one",function(){var a=b("html").xmlns();equals(a.dc,c.dc);equals(a.foaf,"http://www.example.org/foaf");equals(a[""],c.html);equals(a.rdf,c.rdf);equals(a.cc,c.cc);equals(a.ex,c.ex);equals(a.sioc,c.sioc);for(n in a)n!=="dc"&&n!=="foaf"&&n!==""&&n!=="rdf"&&n!=="cc"&&n!=="ex"&&n!=="sioc"&&n!=="xsd"&&n!=="xml"&&n!=="xmlns"&&ok(false,"unexpected namespace: "+n+"="+a[n])});test("on an element that inherits namespaces",function(){var a=
b("body").xmlns();equals(a.dc,c.dc);equals(a.foaf,c.foaf);equals(a[""],c.html);for(n in a)n!=="dc"&&n!=="foaf"&&n!==""&&n!=="rdf"&&n!=="cc"&&n!=="ex"&&n!=="sioc"&&n!=="xsd"&&n!=="xml"&&n!=="xmlns"&&ok(false,"unexpected namespace: "+n+"="+a[n])});test("on a sequence of two elements",function(){var a=b("body, html").xmlns();equals(a.dc,c.dc);equals(a.foaf,"http://www.example.org/foaf");equals(a[""],c.html);for(n in a)n!=="dc"&&n!=="foaf"&&n!==""&&n!=="rdf"&&n!=="cc"&&n!=="ex"&&n!=="sioc"&&n!=="xsd"&&
n!=="xml"&&n!=="xmlns"&&ok(false,"unexpected namespace: "+n+"="+a[n])});module("When getting a known namespace");test("on an element that has the namespace declared",function(){equals(b("html").xmlns("dc"),c.dc)});test("on an element that inherits the namespace",function(){equals(b("body").xmlns("dc"),c.dc)});test("on an element that redeclares the namespace",function(){equals(b("body").xmlns("foaf"),c.foaf)});test("when the namespace is a relative URI",function(){equals(""+b("#relativeUri").xmlns("non"),
""+b.uri("foo"))});test("when the context is more than one element",function(){equals(b("body, html").xmlns("foaf"),"http://www.example.org/foaf","it should return the namespace from the first of the elements")});test("when the namespace hasn't been declared",function(){equals(b("body").xmlns("lic"),undefined)});test("when the namespace is the xmlns namespace",function(){equals(b("body").xmlns("xmlns"),undefined)});module("When setting a namespace");test("on an element that doesn't have the default namespace declared",
function(){equals(b("h1").attr("xmlns"),undefined,"when it doesn't have a declaration itself");b("h1").xmlns("","http://www.example.org/foo");equals(b("h1").attr("xmlns"),"http://www.example.org/foo");b("h1").removeAttr("xmlns")});test("on an element that already has a namespace with that prefix",function(){equals(b("body").attr("xmlns:foaf"),c.foaf);b("body").xmlns("foaf","http://www.example.org/foo");equals(b("body").attr("xmlns:foaf"),"http://www.example.org/foo");b("body").attr("xmlns:foaf",c.foaf)});
test("on multiple elements at the same time",function(){b("h2").xmlns("foo","http://www.example.org/foo");ok(b("h2").length>1,"there's more than one element");for(var a=0;a<b("h2").length;a+=1)equals(b("h2").eq(a).attr("xmlns:foo"),"http://www.example.org/foo");b("h2").removeAttr("xmlns:foo")});test("with an object containing the namespace mappings",function(){var a={foo:"http://www.example.org/foo",bar:"http://www.example.org/bar"};try{b("h1").xmlns(a);equals(b("h1").attr("xmlns:foo"),a.foo);equals(b("h1").attr("xmlns:bar"),
a.bar)}catch(d){ok(false,"it should not cause an error")}b("h1").removeAttr("xmlns:foo");b("h1").removeAttr("xmlns:bar")});module("When removing a namespace declaration");test("from an element that has it",function(){b("body").removeXmlns("foaf");equals(b("body").attr("xmlns:foaf"),undefined);equals(b("body").xmlns("foaf"),"http://www.example.org/foaf","should inherit namespace as usual");b("body").xmlns("foaf",c.foaf)});test("from a set of elements",function(){b("h2").attr("xmlns:foo","http://www.example.org/foo");
b("h2").removeXmlns("foo");for(var a=0;a<b("h2").length;a+=1)equals(b("h2").eq(a).attr("xmlns:foo"),undefined);b("h2").removeAttr("xmlns:foo")});test("when the namespace doesn't exist",function(){equals(b("h2").xmlns("foo"),undefined);try{b("h2").removeXmlns("foo");ok(true,"it should not cause an error")}catch(a){ok(false,"it should not cause an error")}});test("en-masse using an object",function(){var a={foo:"http://www.example.org/foo",bar:"http://www.example.org/bar"};b("#main").attr("xmlns:foo",
a.foo);b("#main").attr("xmlns:bar",a.bar);b("#main").removeXmlns(a);equals(b("#main").attr("xmlns:foo"),undefined);equals(b("#main").attr("xmlns:bar"),undefined)});test("en-masse using an array",function(){var a={foo:"http://www.example.org/foo",bar:"http://www.example.org/bar"};b("#main").attr("xmlns:foo",a.foo);b("#main").attr("xmlns:bar",a.bar);b("#main").removeXmlns(["foo","bar"]);equals(b("#main").attr("xmlns:foo"),undefined);equals(b("#main").attr("xmlns:bar"),undefined)});module("When resolving QNames");
test("of an element in the default namespace with the default namespace declaration on it",function(){var a=b("html").qname();equals(a.namespace,c.html);equals(a.localPart,"html");equals(a.prefix,"");equals(a.name,"html")});test("of an element in the default namespace that inherits its namespace",function(){var a=b("body").qname();equals(a.namespace,c.html);equals(a.localPart,"body");equals(a.prefix,"");equals(a.name,"body")});test("of an element with a prefix",function(){var a;b("#main").append('<s:svg xmlns:s="http://www.w3.org/2000/svg">...</s:svg>');
try{a=b("#main *").qname();equals(a.namespace,"http://www.w3.org/2000/svg");equals(a.localPart,"svg");equals(a.prefix,"s");equals(a.name,"s:svg")}catch(d){b.browser.msie?ok(true,"should raise an error"):ok(false,"should not raise the error "+d)}b("#main *").remove()});test("of a specified QName with a prefix",function(){var a=b("body").qname("foaf:img");equals(a.namespace,c.foaf);equals(a.localPart,"img");equals(a.prefix,"foaf");equals(a.name,"foaf:img")});test("of a QName whose prefix hasn't been declared",
function(){try{b("body").qname("foo:bar");ok(false,"it should raise an error")}catch(a){ok(true,"it should raise an error")}});test("of a QName that has no prefix and there's no in-scope default namespace declaration",function(){var a;b("html").removeXmlns("");try{a=b("body").qname("bar");equals(a.namespace,undefined);equals(a.prefix,"");equals(a.localPart,"bar");equals(a.name,"bar")}catch(d){ok(false,"it should not raise an error")}b("html").xmlns("",c.html)})})(jQuery);
