(function(a){function c(b){a("#main").html(b)}function d(b,f){var g,h=b.databank.triples();equals(h.length,f.length,"there should be "+f.length+" triples");if(h.length>=f.length){for(g=0;g<f.length;g+=1)equals(h[g].toString(),f[g].toString());for(;g<h.length;g+=1)ok(false,"also got "+h[g].toString())}else{for(g=0;g<h.length;g+=1)equals(h[g].toString(),f[g].toString());for(;g<f.length;g+=1)ok(false,"did not get "+f[g].toString())}}var e={namespaces:{rdf:"http://www.w3.org/1999/02/22-rdf-syntax-ns#",
xsd:"http://www.w3.org/2001/XMLSchema#",dc:"http://purl.org/dc/elements/1.1/",foaf:"http://xmlns.com/foaf/0.1/",cc:"http://creativecommons.org/ns#",ex:"http://example.org/",sioc:"http://rdfs.org/sioc/ns#",xhv:"http://www.w3.org/1999/xhtml/vocab#",prism:"http://prism.talis.com/schema#",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"}};module("Performance Tests");test("multiple elements with about and property attributes",function(){var b,f=a("#main");for(b=0;b<100;b+=
1)f.append('<p about="bPerson'+b+'" property="foaf:name">Person '+b+"</p>");b=new Date;f.rdfa();f=new Date-b;ok(f<1E3,"it should parse in less than a second: "+f);a("#main > *").remove();a("#main").removeData("rdfa.triples")});test("multiple elements with about, rel and resource attributes",function(){var b,f=a("#main");for(b=0;b<100;b+=1)f.append('<p about="photo'+b+'.jpg" rel="foaf:depicts" resource="aPerson'+b+'">Paragraph '+b+"</p>");b=new Date;f.rdfa();f=new Date-b;ok(f<1E3,"it should parse in less than a second: "+
f);a("#main > *").remove();a("#main").removeData("rdfa.triples")});module("RDF Gleaner");test("Test 0001",function(){c('<p>This photo was taken by <span class="author" about="photo1.jpg" property="dc:creator">Mark Birbeck</span>.</p>');d(a("#main > p > span").rdf(),[a.rdf.triple('<photo1.jpg> dc:creator "Mark Birbeck" .',e)]);a("#main > p").remove()});test("With a callback",function(){c('<p>This photo was taken by <a about="photo1.jpg" rel="dc:creator" rev="foaf:img" href="http://www.blogger.com/profile/1109404">Mark Birbeck</a>.</p>');
d(a("#main > p > a").rdf(function(){if(this.subject.value.toString()==="http://www.blogger.com/profile/1109404")return this}),[a.rdf.triple("<http://www.blogger.com/profile/1109404> foaf:img <photo1.jpg>",e)]);a("#main > p").remove()});module("Ignore illegal CURIEs");test("In property attribute",function(){c('<p>This photo was taken by <span class="author" about="photo1.jpg" property="creator">Mark Birbeck</span>.</p>');d(a("#main > p > span").rdfa(),[]);a("#main > p").remove()});test("In rel attribute",
function(){c('<p>This photo was taken by <a about="photo1.jpg" rel="creator" href="#mark">Mark Birbeck</a>.</p>');d(a("#main > p > span").rdfa(),[]);a("#main > p").remove()});module("Reported bugs");test("Structured XML Literal",function(){c('<div property="sioc:note"><p>This <strong>is</strong> something</p><p>And <em>something</em> else</p></div>');d(a("#main > p").rdf(),[]);d(a("#main > div").rdf(),[a.rdf.triple('<> sioc:note "<p xmlns=\\"http://www.w3.org/1999/xhtml\\">This <strong>is</strong> something</p><p xmlns=\\"http://www.w3.org/1999/xhtml\\">And <em>something</em> else</p>"^^rdf:XMLLiteral .',
e)]);a("#main > div").remove()});test("RDFa from html element",function(){d(a("html").rdf(),[a.rdf.triple("<> <http://www.w3.org/1999/xhtml/vocab#stylesheet> <../jquery/jquery.qunit/qunit.css>")])});test("XMLLiteral including comments",function(){c('<p property="sioc:note"><!-- ///// --\><em>TODO</em></p>');d(a("#main > p").rdf(),[a.rdf.triple('<> sioc:note "<!-- ///// --\><em xmlns=\\"http://www.w3.org/1999/xhtml\\">TODO</em>"^^rdf:XMLLiteral .',e)]);a("#main > p").remove()});test("Improper whitespace in rel attribute",
function(){c('<a rel="next&#x0b;prev" href="http://example.org/test.css">Test</a>');d(a("#main > a").rdf(),[]);a("#main > a").remove()});test("Uppercase relationship name",function(){c('<a rel="NEXT" href="http://example.org/test.css">Test</a>');d(a("#main > a").rdf(),[a.rdf.triple("<> xhv:next <http://example.org/test.css> .",e)]);a("#main > a").remove()});test("Bogus relationship name",function(){c('<a rel="next bogus prev" href="http://example.org/test.css">Test</a>');d(a("#main > a").rdf(),[a.rdf.triple("<> xhv:next <http://example.org/test.css> .",
e),a.rdf.triple("<> xhv:prev <http://example.org/test.css> .",e)]);a("#main > a").remove()});test("Newline in rel attribute",function(){c('<a rel="next&#x20;prev&#x09;first&#x0a;last&#x0c;section&#x0d;subsection" href="http://example.org/test.css" />');d(a("#main > a").rdf(),[a.rdf.triple("<> xhv:next <http://example.org/test.css> .",e),a.rdf.triple("<> xhv:prev <http://example.org/test.css> .",e),a.rdf.triple("<> xhv:first <http://example.org/test.css> .",e),a.rdf.triple("<> xhv:last <http://example.org/test.css> .",
e),a.rdf.triple("<> xhv:section <http://example.org/test.css> .",e),a.rdf.triple("<> xhv:subsection <http://example.org/test.css> .",e)]);a("#main > a").remove()});test("URI included in relationship",function(){c('<a rel="next http://example.org/test prev" href="http://example.org/test.css">Test</a>');d(a("#main > a").rdf(),[a.rdf.triple("<> xhv:next <http://example.org/test.css> .",e),a.rdf.triple("<> xhv:prev <http://example.org/test.css> .",e)]);a("#main > a").remove()});test("Uppercase prefix in CURIE",
function(){c('<p XMLNS:EX="http://example.org/" property="EX:test">Test</p>');d(a("#main > p").rdf(),[]);a("#main > p").remove()});test("Empty xmlns prefix",function(){c('<p xmlns:="http://example.org/" property=":test">Test</p>');d(a("#main > p").rdf(),[a.rdf.triple('<> xhv:test "Test" .',e)]);a("#main > p").remove()});test("Empty inherited xmlns value",function(){c('<p xmlns:ex="" property="ex:test">Test</p>');d(a("#main > p").rdf(),[a.rdf.triple('<> ex:test "Test" .',e)]);a("#main > p").remove()});
test("Empty xmlns value",function(){c('<p xmlns:ex2="" property="ex2:test">Test</p>');d(a("#main > p").rdf(),[]);a("#main > p").remove()});test("Non-NCName prefix",function(){c('<p xmlns:0="http://example.org/" property="0:test">Test</p>');d(a("#main > p").rdf(),[]);a("#main > p").remove()});test("Underscore prefix",function(){c('<p xmlns:_="http://example.org/" property="_:test">Test</p>');d(a("#main > p").rdf(),[]);a("#main > p").remove()});test("xml prefix with wrong namespace",function(){c('<p xmlns:xml="http://example.org/" property="xml:test">Test</p>');
d(a("#main > p").rdf(),[]);a("#main > p").remove()});test("xmlns declaration",function(){c('<p xmlns:xmlns="http://www.w3.org/2000/xmlns/" property="xmlns:test">Test</p>');d(a("#main > p").rdf(),[]);a("#main > p").remove()});test("xmlns declaration with wrong namespace",function(){c('<p xmlns:xmlns="http://example.org/" property="xmlns:test">Test</p>');d(a("#main > p").rdf(),[]);a("#main > p").remove()});test("bad namespace declaration (xml namespace)",function(){c('<p xmlns:ex2="http://www.w3.org/XML/1998/namespace" property="ex2:test">Test</p>');
d(a("#main > p").rdf(),[]);a("#main > p").remove()});test("bad namespace declaration (xmlns namespace)",function(){c('<p xmlns:ex2="http://www.w3.org/2000/xmlns/" property="ex2:test">Test</p>');d(a("#main > p").rdf(),[]);a("#main > p").remove()});test("ignoring about with invalid prefix",function(){c('<p xmlns:ex="http://example.org/" xmlns:0="http://example.org/error/"><span src="http://example.com/">  <span property="ex:test1">Test</span></span><span about="[0:bogus]" src="http://example.com/">  <span property="ex:test">Test</span></span></p>');
d(a("#main > p").rdf(),[a.rdf.triple('<http://example.com/> <http://example.org/test1> "Test" .'),a.rdf.triple('<http://example.com/> <http://example.org/test> "Test" .')]);a("#main > p").remove()});test("count rel attribute that contains invalid CURIEs",function(){c('<p xmlns:ex="http://example.org/" xmlns:0="http://example.org/error/"><span property="ex:test1" href="http://example.org/href">Test</span><span rel="ex:test2" property="ex:test3" href="http://example.org/href">Test</span><span rel="0:test4" property="ex:test5" href="http://example.org/href">Test</span></p>');
d(a("#main > p").rdf(),[a.rdf.triple('<http://example.org/href> <http://example.org/test1> "Test" .'),a.rdf.triple('<> <http://example.org/test3> "Test" .'),a.rdf.triple("<> <http://example.org/test2> <http://example.org/href> ."),a.rdf.triple('<> <http://example.org/test5> "Test" .')]);a("#main > p").remove()});test("count rel attribute that is empty",function(){c('<p xmlns:ex="http://example.org/"><span property="ex:test1" href="http://example.org/href">Test</span><span rel="ex:test2" property="ex:test3" href="http://example.org/href">Test</span><span rel="" property="ex:test5" href="http://example.org/href">Test</span></p>');
d(a("#main > p").rdf(),[a.rdf.triple('<http://example.org/href> <http://example.org/test1> "Test" .'),a.rdf.triple('<> <http://example.org/test3> "Test" .'),a.rdf.triple("<> <http://example.org/test2> <http://example.org/href> ."),a.rdf.triple('<> <http://example.org/test5> "Test" .')]);a("#main > p").remove()});test("count property attribute that contains invalid CURIEs",function(){c('<div><p xmlns:ex="http://example.org/" about="http://example.com/" rel="ex:rel1">  <span content="Content 1"><span about="http://example.net/">Test 1</span></span></p><p xmlns:ex="http://example.org/" about="http://example.com/" rel="ex:rel2">  <span property="ex:prop" content="Content 2"><span about="http://example.net/">Test 2</span></span></p><p xmlns:ex="http://example.org/" about="http://example.com/" rel="ex:rel3">  <span property="bogus:bogus" content="Content 3"><span about="http://example.net/">Test 3</span></span></p></div>');
var b=a("#main > div").rdf().databank.triples();equals(b[0].toString(),a.rdf.triple("<http://example.com/> <http://example.org/rel1> <http://example.net/> .").toString());equals(b[1].subject.value.toString(),"http://example.com/");equals(b[1].property.value.toString(),"http://example.org/rel2");equals(b[1].object.type,"bnode");equals(b[2].subject.type,"bnode");equals(b[2].property.value.toString(),"http://example.org/prop");equals(b[2].object.value,"Content 2");equals(b[3].subject.value.toString(),
"http://example.com/");equals(b[3].property.value.toString(),"http://example.org/rel3");equals(b[3].object.type,"bnode");a("#main > p").remove()});test("Digit in curie",function(){c('<p xmlns:ex="http://example.org/" property="ex:one2three4">Test</p>');d(a("#main > p").rdf(),[a.rdf.triple('<> <http://example.org/one2three4> "Test" .',e)]);equals(a("#main > p").rdf().databank.triples()[0].property.value,"http://example.org/one2three4");a("#main > p").remove()});test("Square brackets in CURIE",function(){c('<p xmlns:ex="http://example.org/1/" xmlns:[ex="http://example.org/2/" about="[[ex:test]]" property="ex:test">Test</p>');
d(a("#main > p").rdf(),[a.rdf.triple('<> <http://example.org/1/test> "Test" .',e)]);a("#main > p").remove()});test("ignore about attribute that contains invalid CURIE",function(){c('<p about="http://example.net/" xmlns:ex="http://example.org/1/" xmlns:[ex="http://example.org/2/"><span about="[[ex:test]]" property="ex:test">Test</span></p>');d(a("#main > p").rdf(),[a.rdf.triple('<http://example.net/> <http://example.org/1/test> "Test" .',e)]);a("#main > p").remove()});test("ignore about attribute that contains invalid CURIE when setting subject",
function(){c('<p xmlns:ex="http://example.org/1/" xmlns:[ex="http://example.org/2/" about="[[ex:test]]" resource="http://example.net/" property="ex:test">Test</p>');d(a("#main > p").rdf(),[a.rdf.triple('<http://example.net/> <http://example.org/1/test> "Test" .',e)]);a("#main > p").remove()});test("With both lang and xml:lang defined",function(){c('<p xmlns:ex="http://example.org/" property="ex:test" lang="aa" xml:lang="bb">Test</p>');d(a("#main > p").rdf(),[a.rdf.triple('<> ex:test "Test"@aa .',
e)]);a("#main > p").remove()});test("div with no attributes",function(){c('<div id="collections"><ol xmlns:prism="http://prism.talis.com/schema#"typeof="rdf:Seq" about="http://example.com/tenancies/abahhagagabdjfyegegbsh/collections"><li rel="rdf:_1" id="tenancies-abahhagagabdjfyegegbsh-collections-1"  resource="http://example.com/tenancies/abahhagagabdjfyegegbsh/collections/1">  <div>    <input type="checkbox" id="tenancies-abahhagagabdjfyegegbsh-collections-1-hidden" property="prism:hidden"datatype="xsd:boolean" content="true" checked="checked" />  </div></li></ol></div>');
d(a("#collections").rdf(),[a.rdf.triple("<http://example.com/tenancies/abahhagagabdjfyegegbsh/collections> a rdf:Seq .",e),a.rdf.triple("<http://example.com/tenancies/abahhagagabdjfyegegbsh/collections> rdf:_1 <http://example.com/tenancies/abahhagagabdjfyegegbsh/collections/1> .",e),a.rdf.triple('<http://example.com/tenancies/abahhagagabdjfyegegbsh/collections/1> prism:hidden "true"^^xsd:boolean .',e)]);a("#collections").remove()});test("table with RDFa around",function(){c('<div about="http://example.com/"  xmlns:ex="http://example.org/" id="table"><table><tr><td property="ex:test">Test</td></tr></table></div>');
d(a("#table").rdf(),[a.rdf.triple('<http://example.com/> <http://example.org/test> "Test"')]);a("#table").remove()});test("reserved name used within a property",function(){c('<p property="next">Next Page</p>');d(a("#main > p").rdf(),[]);a("#main > p").remove()});test("double quotes in literal",function(){c('<p>This photo was taken by <span about="photo1.jpg" property="dc:creator">Mark "foo" Birbeck</span>.</p>');rdf=a("#main > p > span").rdfa();d(rdf,[a.rdf.triple('<photo1.jpg> dc:creator "Mark \\"foo\\" Birbeck" .',
e)]);equals(rdf.databank.triples()[0].object.value,'Mark "foo" Birbeck');a("#main > p").remove()});module("RDFa Test Suite");test("Test 0001",function(){c('<p>This photo was taken by <span class="author" about="photo1.jpg" property="dc:creator">Mark Birbeck</span>.</p>');d(a("#main > p > span").rdfa(),[a.rdf.triple('<photo1.jpg> dc:creator "Mark Birbeck" .',e)]);a("#main > p").remove()});test("Test 0006",function(){c('<p>This photo was taken by <a about="photo1.jpg" rel="dc:creator" rev="foaf:img" href="http://www.blogger.com/profile/1109404">Mark Birbeck</a>.</p>');
d(a("#main > p > a").rdfa(),[a.rdf.triple("<photo1.jpg> dc:creator <http://www.blogger.com/profile/1109404>",e),a.rdf.triple("<http://www.blogger.com/profile/1109404> foaf:img <photo1.jpg>",e)]);a("#main > p").remove()});test("Test 0007",function(){c('<p>This photo was taken by <a about="photo1.jpg" property="dc:title" content="Portrait of Mark" rel="dc:creator" rev="foaf:img" href="http://www.blogger.com/profile/1109404">Mark Birbeck</a>.</p>');d(a("#main > p > a").rdfa(),[a.rdf.triple('<photo1.jpg> dc:title "Portrait of Mark" .',
e),a.rdf.triple("<photo1.jpg> dc:creator <http://www.blogger.com/profile/1109404> .",e),a.rdf.triple("<http://www.blogger.com/profile/1109404> foaf:img <photo1.jpg> .",e)]);a("#main > p").remove()});test("Test 0008",function(){c('<p>This document is licensed under a <a about="" rel="cc:license" href="http://creativecommons.org/licenses/by-nc-nd/2.5/">Creative Commons</a>.</p>');d(a("#main > p > a").rdfa(),[a.rdf.triple("<> cc:license <http://creativecommons.org/licenses/by-nc-nd/2.5/> .",e)]);a("#main > p").remove()});
test("Test 0009",function(){a("head").append('<link about="http://example.org/people#Person1" rev="dc:knows" href="http://example.org/people#Person2" />');d(a("link[about]").rdfa(),[a.rdf.triple("<http://example.org/people#Person2> dc:knows <http://example.org/people#Person1> .",e)]);a("link[about]").remove()});test("Test 0010",function(){a("head").append('<link about="http://example.org/people#Person1" rel="dc:knows" rev="dc:knows" href="http://example.org/people#Person2" />');d(a("link[about]").rdfa(),
[a.rdf.triple("<http://example.org/people#Person1> dc:knows <http://example.org/people#Person2> .",e),a.rdf.triple("<http://example.org/people#Person2> dc:knows <http://example.org/people#Person1> .",e)]);a("link[about]").remove()});test("Test 0011",function(){c('<div about="">Author: <span property="dc:creator">Albert Einstein</span><h2 property="dc:title">E = mc<sup>2</sup>: The Most Urgent Problem of Our Time</h2></div>');d(a("#main > div > span").rdfa(),[a.rdf.triple('<> dc:creator "Albert Einstein" .',
e)]);d(a("#main > div > h2").rdfa(),[a.rdf.triple('<> dc:title "E = mc<sup xmlns=\\"http://www.w3.org/1999/xhtml\\">2</sup>: The Most Urgent Problem of Our Time"^^rdf:XMLLiteral .',e)]);d(a("#main > div").rdfa(),[a.rdf.triple('<> dc:creator "Albert Einstein" .',e),a.rdf.triple('<> dc:title "E = mc<sup xmlns=\\"http://www.w3.org/1999/xhtml\\">2</sup>: The Most Urgent Problem of Our Time"^^rdf:XMLLiteral .',e)]);a("#main > div").remove()});test("Test 0012",function(){a("head").append('<meta about="http://example.org/node" property="ex:property" xml:lang="fr" content="chat" />');
d(a("meta").rdfa(),[a.rdf.triple('<http://example.org/node> <http://example.org/property> "chat"@fr .')]);a("meta").remove()});test("Test 0013",function(){c('<div about="" xml:lang="fr"><h1 xml:lang="en">Test 0013</h1><span about="http://example.org/node" property="ex:property" content="chat"></span></div>');d(a("#main > div > span").rdfa(),[a.rdf.triple('<http://example.org/node> <http://example.org/property> "chat"@fr .')]);a("#main > div").remove()});test("Test 0014",function(){c('<p><span\tabout="http://example.org/foo" property="ex:bar" content="10" datatype="xsd:integer">ten</span></p>');
d(a("#main > p").rdfa(),[a.rdf.triple("<http://example.org/foo> <http://example.org/bar> 10 .")]);d(a("#main > p > span").rdfa(),[a.rdf.triple("<http://example.org/foo> <http://example.org/bar> 10 .")]);a("#main > p").remove()});test("Test 0015",function(){a("head").append('<link rel="dc:source" href="urn:isbn:0140449132" /><meta property="dc:creator" content="Fyodor Dostoevsky" />');d(a("link[rel=dc:source]").rdfa(),[a.rdf.triple("<> dc:source <urn:isbn:0140449132> .",e)]);d(a("meta").rdfa(),[a.rdf.triple('<> dc:creator "Fyodor Dostoevsky"  .',
e)]);a("link[rel=dc:source]").remove();a("meta").remove()});test("Test 0017",function(){c('<p><span about="[_:a]" property="foaf:name">Manu Sporny</span> <span about="[_:a]" rel="foaf:knows" resource="[_:b]">knows</span> <span about="[_:b]" property="foaf:name">Ralph Swick</span>.</p>');d(a("#main > p > span").eq(0).rdfa(),[a.rdf.triple('_:a foaf:name "Manu Sporny" .',e)]);d(a("#main > p > span").eq(1).rdfa(),[a.rdf.triple("_:a foaf:knows _:b .",e)]);d(a("#main > p > span").eq(2).rdfa(),[a.rdf.triple('_:b foaf:name "Ralph Swick" .',
e)]);d(a("#main > p").rdfa(),[a.rdf.triple('_:a foaf:name "Manu Sporny" .',e),a.rdf.triple("_:a foaf:knows _:b .",e),a.rdf.triple('_:b foaf:name "Ralph Swick" .',e)]);a("#main > p").remove()});test("Test 0018",function(){c('<p>This photo was taken by <a about="photo1.jpg" rel="dc:creator" href="http://www.blogger.com/profile/1109404">Mark Birbeck</a>.</p>');d(a("#main > p > a").rdfa(),[a.rdf.triple("<photo1.jpg> dc:creator <http://www.blogger.com/profile/1109404> .",e)]);d(a("#main > p").rdfa(),[a.rdf.triple("<photo1.jpg> dc:creator <http://www.blogger.com/profile/1109404> .",
e)]);a("#main > p").remove()});test("Test 0019",function(){c('<div about="mailto:manu.sporny@digitalbazaar.com" rel="foaf:knows" href="mailto:michael.hausenblas@joanneum.at"></div>');d(a("#main > div").rdfa(),[a.rdf.triple("<mailto:manu.sporny@digitalbazaar.com> foaf:knows <mailto:michael.hausenblas@joanneum.at> .",e)]);a("#main > div").remove()});test("Test 0020",function(){c('<div about="photo1.jpg"><span class="attribution-line">this photo was taken by <span property="dc:creator">Mark Birbeck</span></span></div>');
d(a("#main > div > span > span").rdfa(),[a.rdf.triple('<photo1.jpg> dc:creator "Mark Birbeck" .',e)]);d(a("#main > div > span").rdfa(),[a.rdf.triple('<photo1.jpg> dc:creator "Mark Birbeck" .',e)]);d(a("#main > div").rdfa(),[a.rdf.triple('<photo1.jpg> dc:creator "Mark Birbeck" .',e)]);a("#main > div").remove()});test("Test 0021",function(){c('<div><span class="attribution-line">this photo was taken by <span property="dc:creator">Mark Birbeck</span></span></div>');d(a("#main > div > span > span").rdfa(),
[a.rdf.triple('<> dc:creator "Mark Birbeck" .',e)]);d(a("#main > div > span").rdfa(),[a.rdf.triple('<> dc:creator "Mark Birbeck" .',e)]);d(a("#main > div").rdfa(),[a.rdf.triple('<> dc:creator "Mark Birbeck" .',e)]);a("#main > div").remove()});test("Test 0023",function(){c('<div id="photo1">This photo was taken by <span property="dc:creator">Mark Birbeck</span></div>');d(a("#main > div > span").rdfa(),[a.rdf.triple('<> dc:creator "Mark Birbeck" .',e)]);d(a("#main > div").rdfa(),[a.rdf.triple('<> dc:creator "Mark Birbeck" .',
e)]);a("#main > div").remove()});test("Test 0025",function(){c('<p>This paper was written by <span rel="dc:creator" resource="#me"><span property="foaf:name">Ben Adida</span>.</span></p>');d(a("#main > p > span > span").rdfa(),[a.rdf.triple('<#me> foaf:name "Ben Adida" .',e)]);d(a("#main > p > span").rdfa(),[a.rdf.triple("<> dc:creator <#me> .",e),a.rdf.triple('<#me> foaf:name "Ben Adida" .',e)]);d(a("#main > p").rdfa(),[a.rdf.triple("<> dc:creator <#me> .",e),a.rdf.triple('<#me> foaf:name "Ben Adida" .',
e)]);a("#main > p").remove()});test("Test 0026",function(){c('<p><span about="http://internet-apps.blogspot.com/" property="dc:creator" content="Mark Birbeck" /></p>');d(a("#main > p > span").rdfa(),[a.rdf.triple('<http://internet-apps.blogspot.com/> dc:creator "Mark Birbeck" .',e)]);d(a("#main > p").rdfa(),[a.rdf.triple('<http://internet-apps.blogspot.com/> dc:creator "Mark Birbeck" .',e)]);a("#main > p").remove()});test("Test 0027",function(){c('<p><span about="http://internet-apps.blogspot.com/" property="dc:creator" content="Mark Birbeck">Mark B.</span></p>');
d(a("#main > p > span").rdfa(),[a.rdf.triple('<http://internet-apps.blogspot.com/> dc:creator "Mark Birbeck" .',e)]);d(a("#main > p").rdfa(),[a.rdf.triple('<http://internet-apps.blogspot.com/> dc:creator "Mark Birbeck" .',e)]);a("#main > p").remove()});test("Test 0029",function(){c('<p><span about="http://example.org/foo" property="dc:creator" datatype="xsd:string"><b>M</b>ark <b>B</b>irbeck</span>.</p>');d(a("#main > p > span > b").rdfa(),[]);d(a("#main > p > span").rdfa(),[a.rdf.triple('<http://example.org/foo> dc:creator "Mark Birbeck"^^xsd:string .',
e)]);d(a("#main > p").rdfa(),[a.rdf.triple('<http://example.org/foo> dc:creator "Mark Birbeck"^^xsd:string .',e)]);a("#main > p").remove()});test("Test 0030",function(){c('<p>This document is licensed under a <a rel="cc:license" href="http://creativecommons.org/licenses/by-nc-nd/2.5/">Creative Commons License</a>.</p>');d(a("#main > p > a").rdfa(),[a.rdf.triple("<> cc:license <http://creativecommons.org/licenses/by-nc-nd/2.5/> .",e)]);d(a("#main > p").rdfa(),[a.rdf.triple("<> cc:license <http://creativecommons.org/licenses/by-nc-nd/2.5/> .",
e)]);a("#main > p").remove()});test("Test 0031",function(){c('<p about="#wtw">The book <b>Weaving the Web</b> (hardcover) has the ISBN <span rel="dc:identifier" resource="urn:ISBN:0752820907">0752820907</span>.</p>');d(a("#main > p > b").rdfa(),[]);d(a("#main > p > span").rdfa(),[a.rdf.triple("<#wtw> dc:identifier <urn:ISBN:0752820907> .",e)]);d(a("#main > p").rdfa(),[a.rdf.triple("<#wtw> dc:identifier <urn:ISBN:0752820907> .",e)]);a("#main > p").remove()});test("Test 0032",function(){c('<p about="#wtw">The book <b>Weaving the Web</b> (hardcover) has the ISBN <a rel="dc:identifier" resource="urn:ISBN:0752820907" href="http://www.amazon.com/Weaving-Web-Tim-Berners-Lee/dp/0752820907">0752820907</a>.</p>');
d(a("#main > p > b").rdfa(),[]);d(a("#main > p > a").rdfa(),[a.rdf.triple("<#wtw> dc:identifier <urn:ISBN:0752820907> .",e)]);d(a("#main > p").rdfa(),[a.rdf.triple("<#wtw> dc:identifier <urn:ISBN:0752820907> .",e)]);a("#main > p").remove()});test("Test 0033",function(){var b,f;c('<p>This paper was written by <span rel="dc:creator"><span property="foaf:name">Ben Adida</span>.</span></p>');b=a("#main > p > span > span").rdfa();b=b.databank.triples()[0];equals(b.subject.type,"bnode","the subject of the foaf:name triple should be blank");
equals(b.property,a.rdf.resource("foaf:name",e));equals(b.object,a.rdf.literal('"Ben Adida"'));b=a("#main > p > span").rdfa();equals(b.databank.size(),2,"the span should return two triples");f=b.databank.triples();b=f[0];if(b!==undefined){equals(b.subject,a.rdf.resource("<>"));equals(b.property,a.rdf.resource("dc:creator",e));equals(b.object.type,"bnode","the object of the dc:creator triple should be blank")}b=f[1];if(b!==undefined){equals(b.subject.type,"bnode","the subject of the foaf:name triple should be blank");
equals(b.property,a.rdf.resource("foaf:name",e));equals(b.object,a.rdf.literal('"Ben Adida"'));ok(f[0].object===f[1].subject,"the object of the first triple should be the same as the subject of the second triple")}a("#main > p").remove()});test("Test 0034",function(){c('<div about="http://sw-app.org/mic.xhtml#i" rel="foaf:img"><img src="http://sw-app.org/img/mic_2007_01.jpg" alt="A photo depicting Michael" /></div>');d(a("#main > div > img").rdfa(),[]);d(a("#main > div").rdfa(),[a.rdf.triple("<http://sw-app.org/mic.xhtml#i> foaf:img <http://sw-app.org/img/mic_2007_01.jpg> .",
e)]);a("#main > div").remove()});test("Test 0035",function(){c('<div><img \tabout="http://sw-app.org/mic.xhtml#i" rel="foaf:img" src="http://sw-app.org/img/mic_2007_01.jpg" href="http://sw-app.org/img/mic_2006_03.jpg" alt="A photo depicting Michael" /></div>');d(a("#main > div").rdfa(),[a.rdf.triple("<http://sw-app.org/mic.xhtml#i> <http://xmlns.com/foaf/0.1/img> <http://sw-app.org/img/mic_2006_03.jpg> .")]);a("#main > div").remove()});test("Test 0036",function(){c('<div><img \tabout="http://sw-app.org/mic.xhtml#i" rel="foaf:img" src="http://sw-app.org/img/mic_2007_01.jpg" resource="http://sw-app.org/img/mic_2006_03.jpg" alt="A photo depicting Michael" /></div>');
d(a("#main > div").rdfa(),[a.rdf.triple("<http://sw-app.org/mic.xhtml#i> <http://xmlns.com/foaf/0.1/img> <http://sw-app.org/img/mic_2006_03.jpg> .")]);a("#main > div").remove()});test("Test 0037",function(){c('<div><img \tabout="http://sw-app.org/mic.xhtml#i" rel="foaf:img" src="http://sw-app.org/img/mic_2007_01.jpg"  href="http://sw-app.org/img/mic_2006_03.jpg" resource="http://sw-app.org/mic.xhtml#photo"  alt="A photo depicting Michael" /></div>');d(a("#main > div").rdfa(),[a.rdf.triple("<http://sw-app.org/mic.xhtml#i> <http://xmlns.com/foaf/0.1/img> <http://sw-app.org/mic.xhtml#photo> .")]);
a("#main > div").remove()});test("Test 0038",function(){c('<div about="http://sw-app.org/mic.xhtml#i" rev="foaf:depicts"><img src="http://sw-app.org/img/mic_2007_01.jpg" alt="A photo depicting Michael" /></div>');d(a("#main > div").rdfa(),[a.rdf.triple("<http://sw-app.org/img/mic_2007_01.jpg> <http://xmlns.com/foaf/0.1/depicts> <http://sw-app.org/mic.xhtml#i> .")]);a("#main > div").remove()});test("Test 0039",function(){c('<div><img \tabout="http://sw-app.org/mic.xhtml#i" rev="foaf:depicts" src="http://sw-app.org/img/mic_2007_01.jpg"  href="http://sw-app.org/img/mic_2006_03.jpg"  alt="A photo depicting Michael" /></div>');
d(a("#main > div").rdfa(),[a.rdf.triple("<http://sw-app.org/img/mic_2006_03.jpg> <http://xmlns.com/foaf/0.1/depicts> <http://sw-app.org/mic.xhtml#i> .")]);a("#main > div").remove()});test("Test 0040",function(){c('<div><img src="http://sw-app.org/img/mic_2007_01.jpg" rev="alternate" resource="http://sw-app.org/img/mic_2006_03.jpg" alt="A photo depicting Michael" /></div>');d(a("#main > div").rdfa(),[a.rdf.triple("<http://sw-app.org/img/mic_2006_03.jpg>  <http://www.w3.org/1999/xhtml/vocab#alternate> <http://sw-app.org/img/mic_2007_01.jpg> .")]);
a("#main > div").remove()});test("Test 0041",function(){c('<div><img \tabout="http://sw-app.org/mic.xhtml#i" rev="foaf:depicts" src="http://sw-app.org/img/mic_2007_01.jpg" href="http://sw-app.org/img/mic_2006_03.jpg" resource="http://sw-app.org/mic.xhtml#photo"  alt="A photo depicting Michael" /></div>');d(a("#main > div").rdfa(),[a.rdf.triple("<http://sw-app.org/mic.xhtml#photo> <http://xmlns.com/foaf/0.1/depicts> <http://sw-app.org/mic.xhtml#i> .")]);a("#main > div").remove()});test("Test 0042",
function(){c('<div><img \trel="foaf:img" src="http://sw-app.org/img/mic_2007_01.jpg"  alt="A photo depicting Michael" /></div>');d(a("#main > div").rdfa(),[]);a("#main > div").remove()});test("Test 0046",function(){c('<div rel="foaf:maker" typeof="foaf:Document"><p property="foaf:name">John Doe</p></div>');var b=a("#main > div").rdf().databank.triples();equals(b[0].subject.type,"bnode");equals(b[0].property.value,"http://www.w3.org/1999/02/22-rdf-syntax-ns#type");equals(b[0].object.value,"http://xmlns.com/foaf/0.1/Document");
equals(b[0].subject,b[1].subject);equals(b[1].subject.type,"bnode");equals(b[1].property.value,"http://xmlns.com/foaf/0.1/maker");equals(b[1].object.type,"bnode");equals(b[1].object,b[2].subject);equals(b[2].subject.type,"bnode");equals(b[2].property.value,"http://xmlns.com/foaf/0.1/name");equals(b[2].object.value,"John Doe");a("#main > div").remove()});test("Test 0047",function(){c('<div rel="foaf:maker" typeof="foaf:Document" resource="http://www.example.org/#me"><p property="foaf:name">John Doe</p></div>');
var b=a("#main > div").rdf().databank.triples();equals(b[0].subject.type,"bnode");equals(b[0].property.value,"http://www.w3.org/1999/02/22-rdf-syntax-ns#type");equals(b[0].object.value,"http://xmlns.com/foaf/0.1/Document");equals(b[0].subject,b[1].subject);equals(b[1].subject.type,"bnode");equals(b[1].property.value,"http://xmlns.com/foaf/0.1/maker");equals(b[1].object.value,"http://www.example.org/#me");equals(b[2],a.rdf.triple('<http://www.example.org/#me> <http://xmlns.com/foaf/0.1/name> "John Doe" .'));
a("#main > div").remove()});test("Test 0048",function(){c('<div about="http://www.example.org/#me" rel="foaf:knows" typeof="foaf:Person"><p property="foaf:name">John Doe</p></div>');var b=a("#main > div").rdf().databank.triples();equals(b[0],a.rdf.triple("<http://www.example.org/#me> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://xmlns.com/foaf/0.1/Person> ."));equals(b[1].subject.value,"http://www.example.org/#me");equals(b[1].property.value,"http://xmlns.com/foaf/0.1/knows");equals(b[1].object.type,
"bnode");equals(b[1].object,b[2].subject);equals(b[2].subject.type,"bnode");equals(b[2].property.value,"http://xmlns.com/foaf/0.1/name");equals(b[2].object.value,"John Doe");a("#main > div").remove()});test("Test 0049",function(){c('<div about="http://www.example.org/#me" typeof="foaf:Person"><p property="foaf:name">John Doe</p></div>');d(a("#main > div").rdfa(),[a.rdf.triple("<http://www.example.org/#me> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://xmlns.com/foaf/0.1/Person> ."),a.rdf.triple('<http://www.example.org/#me> <http://xmlns.com/foaf/0.1/name> "John Doe" .')]);
a("#main > div").remove()});test("Test 0050",function(){c('<div typeof="foaf:Person"><p property="foaf:name">John Doe</p></div>');var b=a("#main > div").rdf().databank.triples();equals(b[0].subject.type,"bnode");equals(b[0].property.value,"http://www.w3.org/1999/02/22-rdf-syntax-ns#type");equals(b[0].object.value,"http://xmlns.com/foaf/0.1/Person");equals(b[0].subject,b[1].subject);equals(b[1].subject.type,"bnode");equals(b[1].property.value,"http://xmlns.com/foaf/0.1/name");equals(b[1].object.value,
"John Doe");a("#main > div").remove()});test("Test 0086",function(){c('<div about="http://www.example.org/#somebody" rel="foobar"><p resource="mailto:ivan@w3.org">mailto:ivan@w3.org</p></div>');d(a("#main > div").rdfa(),[]);a("#main > div").remove()});test("Test 0092",function(){c('<div about="">Author: <span property="dc:creator">Albert Einstein</span><h2 property="dc:title" datatype="rdf:XMLLiteral">E = mc<sup>2</sup>: The Most Urgent Problem of Our Time</h2></div>');d(a("#main > div").rdfa(),[a.rdf.triple('<> <http://purl.org/dc/elements/1.1/creator> "Albert Einstein" .'),
a.rdf.triple('<> <http://purl.org/dc/elements/1.1/title>  "E = mc<sup xmlns=\\"http://www.w3.org/1999/xhtml\\">2</sup>: The Most Urgent Problem of Our Time"^^<http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral> .')]);a("#main > div").remove()});test("Test 0093",function(){c('<div xmlns:ex="http://www.example.org/" about="">Author: <span property="dc:creator">Albert Einstein</span><h2 property="dc:title" datatype="ex:XMLLiteral">E = mc<sup>2</sup>: The Most Urgent Problem of Our Time</h2></div>');
d(a("#main > div").rdfa(),[a.rdf.triple('<> <http://purl.org/dc/elements/1.1/creator> "Albert Einstein" .'),a.rdf.triple('<> <http://purl.org/dc/elements/1.1/title>  "E = mc2: The Most Urgent Problem of Our Time"^^<http://www.example.org/XMLLiteral> .')]);a("#main > div").remove()});module("Adding RDFa to elements");test("adding RDFa to an element",function(){var b=false;c("<p>This document is by <span>Jeni Tennison</span>.</p>");var f=a("#main > p > span");f.bind("rdfChange",function(){b=true});
f.rdfa('<> dc:creator "Jeni Tennison" .');ok(b,"should trigger any functions bound to the changeRDF event");a("#main > p").remove()});test("adding RDFa to an element whose text matches the literal value of the RDFa",function(){c("<p>This document is by <span>Jeni Tennison</span>.</p>");var b=a("#main > p > span");b.rdfa('<> dc:creator "Jeni Tennison" .');equals(b.attr("about"),undefined);equals(b.attr("property"),"dc:creator");equals(b.attr("content"),undefined);equals(b.attr("datatype"),"");a("#main > p").remove()});
test("adding RDFa to an element whose text does not match the literal value of the RDFa",function(){c("<p>This document is by <span>me</span>.</p>");var b=a("#main > p > span");b.rdfa('<> dc:creator "Jeni Tennison" .');equals(b.attr("about"),undefined);equals(b.attr("property"),"dc:creator");equals(b.attr("content"),"Jeni Tennison");equals(b.attr("datatype"),undefined);a("#main > p").remove()});test("adding RDFa to an element whose value has a datatype",function(){c("<p>Last updated <span>today</span></p>");
var b=a("#main > p > span");b.rdfa('<> dc:date "2008-10-19"^^xsd:date .');equals(b.attr("about"),undefined);equals(b.attr("property"),"dc:date");equals(b.attr("content"),"2008-10-19");equals(b.attr("datatype"),"xsd:date");a("#main > p").remove()});test("adding RDFa without the namespaces already having been declared",function(){c("<p>This document is by <span>Jeni Tennison</span>.</p>");var b=a("#main > p > span");b.rdfa('<> <http://www.example.org/ns/my#author> "Jeni Tennison" .');equals(b.attr("about"),
undefined);equals(b.attr("property"),"ns1:author");equals(b.attr("content"),undefined);equals(b.attr("datatype"),"");equals(b.attr("xmlns:ns1"),"http://www.example.org/ns/my#");a("#main > p").remove()});test("adding RDFa to an element where the literal value has a language",function(){c("<p>This document is about my <span>chat</span>.</p>");var b=a("#main > p > span");b.rdfa('<> ex:topic "chat"@fr .');equals(b.attr("about"),undefined);equals(b.attr("property"),"ex:topic");equals(b.attr("content"),
undefined);equals(b.attr("datatype"),undefined);equals(b.attr("lang"),"fr");a("#main > p").remove()});test("adding RDFa to an element where the literal value has a language different from the context and its contents",function(){c('<p lang="en">This document is about my <span>cat</span>.</p>');var b=a("#main > p > span");b.rdfa('<> ex:topic "chat"@fr .');equals(b.attr("about"),undefined);equals(b.attr("property"),"ex:topic");equals(b.attr("content"),"chat");equals(b.attr("datatype"),undefined);equals(b.attr("lang"),
"fr");equals(b.children("span").length,1,"it should have a nested span added");equals(b.children("span").attr("lang"),"en","with the context language added");a("#main > p").remove()});test("adding RDFa where the object is an XMLLiteral",function(){c("<p>This document is by <span>Jeni Tennison</span>.</p>");var b=a("#main > p > span");b.rdfa('<> dc:creator "Jeni <em>Tennison</em>"^^<http://www.w3.org/1999/02/22-rdf-syntax-ns#XMLLiteral> .');equals(b.attr("about"),undefined);equals(b.attr("property"),
"dc:creator");equals(b.attr("content"),undefined);equals(b.attr("datatype"),"rdf:XMLLiteral");equals(b.children("em").length,1,"it should have a nested em added");equals(b.children("em").text(),"Tennison");a("#main > p").remove()});test("adding RDFa where the subject is a resource and the object is an XMLLiteral",function(){c('<p>This photo was taken by <span class="author">Mark Birbeck</span>.</p>');var b=a("#main > p > span");b.rdfa('<photo1.jpg> dc:creator "Mark Birbeck" .');equals(b.attr("about"),
"photo1.jpg");equals(b.attr("property"),"dc:creator");equals(b.attr("content"),undefined);equals(b.attr("datatype"),"");a("#main > p").remove()});test("adding RDFa where the object is a resource which is already referenced",function(){c('<p>This photo was taken by <a href="http://www.blogger.com/profile/1109404">Mark Birbeck</a>.</p>');var b=a("#main > p > a");b.rdfa("<photo1.jpg> dc:creator <http://www.blogger.com/profile/1109404> .");equals(b.attr("about"),"photo1.jpg");equals(b.attr("rel"),"dc:creator");
equals(b.attr("href"),"http://www.blogger.com/profile/1109404");equals(b.attr("resource"),undefined);a("#main > p").remove()});test("adding RDFa where the subject is a resource which is already referenced",function(){c('<p>This photo was taken by <a href="http://www.blogger.com/profile/1109404">Mark Birbeck</a>.</p>');var b=a("#main > p > a");b.rdfa("<http://www.blogger.com/profile/1109404> foaf:img <photo1.jpg> .");equals(b.attr("about"),"photo1.jpg");equals(b.attr("rel"),"");equals(b.attr("rev"),
"foaf:img");equals(b.attr("href"),"http://www.blogger.com/profile/1109404");equals(b.attr("resource"),undefined);a("#main > p").remove()});test("adding RDFa where the subject and object are resource which are already referenced",function(){c('<p>This photo was taken by <a about="photo1.jpg" rel="dc:creator" href="http://www.blogger.com/profile/1109404">Mark Birbeck</a>.</p>');var b=a("#main > p > a");b.rdfa("<http://www.blogger.com/profile/1109404> foaf:img <photo1.jpg> .");equals(b.attr("about"),
"photo1.jpg");equals(b.attr("rel"),"dc:creator");equals(b.attr("rev"),"foaf:img");equals(b.attr("href"),"http://www.blogger.com/profile/1109404");equals(b.attr("resource"),undefined);a("#main > p").remove()});test("adding a triple with a literal, where the subject is already present",function(){c('<p>This photo was taken by <a about="photo1.jpg" rel="dc:creator" rev="foaf:img" href="http://www.blogger.com/profile/1109404">Mark Birbeck</a>.</p>');var b=a("#main > p > a");b.rdfa('<photo1.jpg> dc:title "Portrait of Mark" .');
equals(b.attr("about"),"photo1.jpg");equals(b.attr("property"),"dc:title");equals(b.attr("content"),"Portrait of Mark");equals(b.attr("datatype"),undefined);a("#main > p").remove()});test("adding a triple whose subject is a blank node",function(){c('<p><span>Manu Sporny</span> <span>knows</span> <span about="[_:b]" property="foaf:name">Ralph Swick</span>.</p>');var b=a("#main > p > span:eq(0)");b.rdfa('_:a foaf:name "Manu Sporny" .');equals(b.attr("about"),"[_:a]");equals(b.attr("property"),"foaf:name");
b=a("#main > p > span:eq(1)");b.rdfa("_:a foaf:knows _:b .");equals(b.attr("about"),"[_:a]");equals(b.attr("rel"),"foaf:knows");equals(b.attr("resource"),"[_:b]");a("#main > p").remove()});test("adding a triple whose object is a resource, when the element has a different href",function(){c('<p about="#wtw">The book <b>Weaving the Web</b> (hardcover) has the ISBN <a href="http://www.amazon.com/Weaving-Web-Tim-Berners-Lee/dp/0752820907">0752820907</a>.</p>');var b=a("#main > p > a");b.rdfa("<#wtw> dc:identifier <urn:ISBN:0752820907> .");
equals(b.attr("about"),undefined);equals(b.attr("rel"),"dc:identifier");equals(b.attr("resource"),"urn:ISBN:0752820907");equals(b.attr("href"),"http://www.amazon.com/Weaving-Web-Tim-Berners-Lee/dp/0752820907");a("#main > p").remove()});test("adding a triple whose object is a literal, when the element's object is the triple's subject",function(){c('<p>This is <a rel="dc:creator" href="http://www.jenitennison.com/">Jeni\'s Home Page</a></p>');var b=a("#main > p > a");b.rdfa('<http://www.jenitennison.com/> dc:title "Jeni\'s XSLT Pages" .');
equals(b.attr("about"),undefined);equals(b.attr("rel"),"dc:creator");equals(b.attr("href"),"http://www.jenitennison.com/");equals(b.attr("property"),undefined);b=b.children("span");equals(b.attr("about"),undefined);equals(b.attr("property"),"dc:title");equals(b.attr("content"),"Jeni's XSLT Pages");equals(b.attr("datatype"),undefined);a("#main > p").remove()});test("adding a triple where the element already has the triple with a different value",function(){c('<p>This is about <span about="#SusannahDarwin" property="rdf:label">Susannah Darwin</span></p>');
var b=a("#main > p > span");b.rdfa('<#SusannahDarwin> rdf:label "Susannah" .');equals(b.attr("about"),"#SusannahDarwin");equals(b.attr("property"),"rdf:label");equals(b.attr("content"),undefined);b=b.children("span");equals(b.attr("about"),undefined);equals(b.attr("property"),"rdf:label");equals(b.attr("content"),"Susannah");equals(b.text(),"Susannah Darwin");a("#main > p").remove()});test("adding a triple where the element already has a triple with the same literal value",function(){c('<p>This is about <span about="#SusannahDarwin" property="rdf:label">Susannah Darwin</span></p>');
var b=a("#main > p > span");b.rdfa('<#SusannahDarwin> foaf:name "Susannah Darwin" .');equals(b.attr("about"),"#SusannahDarwin");equals(b.attr("property"),"rdf:label foaf:name");equals(b.text(),"Susannah Darwin");ok(b.children("*").length===0,"the span doesn't have any child elements");a("#main > p").remove()});test("adding a triple where the element already has the triple with a different object",function(){c('<p>This is about <span about="#SusannahDarwin" rel="foaf:son" resource="#CharlesDarwin">Susannah Darwin</span></p>');
var b=a("#main > p > span");b.rdfa("<#SusannahDarwin> foaf:son <#ErasmusDarwin> .");equals(b.attr("about"),"#SusannahDarwin");equals(b.attr("rel"),"foaf:son");equals(b.attr("resource"),"#CharlesDarwin");b=b.parent();equals(b.attr("about"),"#ErasmusDarwin");equals(b.attr("rev"),"foaf:son");equals(b.attr("resource"),undefined);a("#main > p").remove()});test("adding a repeat of a triple",function(){c('<p><span datatype="" property="rdf:label" typeof="foaf:Person" about="#CharlesRobertDarwin"><span property="foaf:firstName">Charles</span> Robert <span property="foaf:surname">Darwin</span></span></p>');
var b=a("#main > p > span");b.rdfa('<#CharlesRobertDarwin> rdf:label "Charles Robert Darwin" .');equals(b.attr("about"),"#CharlesRobertDarwin");equals(b.attr("typeof"),"foaf:Person");equals(b.attr("property"),"rdf:label");equals(b.attr("datatype"),"");a("#main > p").remove()});module("removing RDFa from elements");test("removing RDFa from an element",function(){var b=false;c('<p>This document is by <span property="dc:creator">Jeni Tennison</span>.</p>');var f=a("#main > p > span");f.bind("rdfChange",
function(){b=true});f.removeRdfa({property:"dc:creator"});ok(b,"should trigger any functions bound to the changeRDF event");a("#main > p").remove()});test("removing a property from an element",function(){c('<p>This document is by <span property="dc:creator">Jeni Tennison</span>.</p>');var b=a("#main > p > span");b.removeRdfa({property:"dc:creator"});equals(b.attr("property"),undefined,"the property attribute should be removed");a("#main > p").remove()});test("attempting to remove a property from an element when the property doesn't match",
function(){c('<p>This document is by <span property="dc:creator">Jeni Tennison</span>.</p>');var b=a("#main > p > span");b.removeRdfa({property:"dc:modified"});equals(b.attr("property"),"dc:creator","the property attribute should not be removed");a("#main > p").remove()});test("removing a property from an element when the property contains multiple values",function(){c('<p>This document is by <span property="dc:creator dc:contributor">Jeni Tennison</span>.</p>');var b=a("#main > p > span");b.removeRdfa({property:"dc:creator"});
equals(b.attr("property"),"dc:contributor","only the relevant value should be removed");a("#main > p").remove()});test("removing a property resource from an element",function(){c('<p>This document is by <span property="dc:creator dc:contributor">Jeni Tennison</span>.</p>');var b=a("#main > p > span");b.removeRdfa({property:a.rdf.resource("<"+e.namespaces.dc+"creator>")});equals(b.attr("property"),"dc:contributor","only the relevant value should be removed");a("#main > p").remove()});test("removing a relation from an element",
function(){c('<p>This document is by <a rel="dc:creator" href="http://www.jenitennison.com/">Jeni Tennison</span>.</p>');var b=a("#main > p > a");b.removeRdfa({property:"dc:creator"});ok(b.attr("rel")===""||b.attr("rel")===undefined,"The rel attribute should be removed");a("#main > p").remove()});test("removing a type from an element",function(){c('<p>This document is by <a about="http://www.jenitennison.com/" typeof="foaf:Person">Jeni Tennison</span>.</p>');var b=a("#main > p > a");b.removeRdfa({type:"foaf:Person"});
equals(b.attr("typeof"),undefined,"The typeof attribute should be removed");a("#main > p").remove()});module("Testing Selectors");test("selecting nodes with a particular subject",function(){c('<p><span datatype="" property="rdf:label" typeof="foaf:Person" about="#CharlesRobertDarwin"><span property="foaf:firstName">Charles</span> Robert <span property="foaf:surname">Darwin</span></span> and his mother <span about="#SusannahDarwin" property="rdf:label">Susannah Darwin</span></p>');var b=a("#main > p span"),
f=a("#main span:about('#CharlesRobertDarwin')");equals(f.length,3,"there should be three spans about #CharlesRobertDarwin");equals(f[0],b[0]);equals(f[1],b[1]);equals(f[2],b[2]);a("#main > p").remove()});test("selecting nodes with any subject",function(){c('<p><span datatype="" property="rdf:label" typeof="foaf:Person" about="#CharlesRobertDarwin"><span property="foaf:firstName">Charles</span> Robert <span property="foaf:surname">Darwin</span></span> and his mother <span about="#SusannahDarwin" property="rdf:label">Susannah Darwin</span></p>');
var b=a("#main > p span"),f=a("#main span:about");equals(f.length,4,"there should be four spans that are about something or other");equals(f[0],b[0]);equals(f[1],b[1]);equals(f[2],b[2]);equals(f[3],b[3]);a("#main > p").remove()});test("selecting nodes with a CURIE subject",function(){c('<p><span datatype="" property="rdf:label" typeof="foaf:Person" about="[ex:Someone]">someone</span> and <span about="[ex:SomeoneElse]">someone else</span></p>');var b=a("#main > p span"),f=a("#main span:about('[ex:Someone]')");
equals(f.length,1,"there should be one span about [ex:Someone]");equals(f[0],b[0]);a("#main > p").remove()});test("selecting nodes that represent a particular type of thing",function(){c('<p><span datatype="" property="rdf:label" typeof="foaf:Person" about="#CharlesRobertDarwin"><span property="foaf:firstName">Charles</span> Robert <span property="foaf:surname">Darwin</span></span> and his mother <span about="#SusannahDarwin" typeof="foaf:Person" property="rdf:label">Susannah Darwin</span></p>');
var b=a("#main > p span"),f=a("#main span:type('foaf:Person')");equals(f.length,2,"there should be two spans whose type is a person");equals(f[0],b[0]);equals(f[1],b[3]);a("#main > p").remove()});test("selecting nodes that represent any thing",function(){c('<p><span datatype="" property="rdf:label" typeof="foaf:Person" about="#CharlesRobertDarwin"><span property="foaf:firstName">Charles</span> Robert <span property="foaf:surname">Darwin</span></span> and his mother <span about="#SusannahDarwin" typeof="foaf:Person" property="rdf:label">Susannah Darwin</span></p>');
var b=a("#main > p span"),f=a("#main span:type");equals(f.length,2,"there should be two spans with a type");equals(f[0],b[0]);equals(f[1],b[3]);a("#main > p").remove()})})(jQuery);
